(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[737],{9170:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return h},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return b}});var i=t(2122),a=t(9756),o=t(7294),r=t(3905),u=t(8414),s={dragLink:null,registeredElements:new Map,canvasRef:null,viewRef:null,nodes:[{id:"node_a",label:"Node A",position:[100,100],outputs:[{id:"1",label:"Out"}]},{id:"node_b",label:"Node B",position:[400,400],inputs:[{id:"3",label:"In"}]}],links:[{input:"1",output:"3"}],position:[0,0],scale:1},l=function(){var n=(0,u.I_)(s);return o.createElement("div",{style:{width:"100%",height:500}},o.createElement(u.S0,{schema:n}))},c=t(6589),d=["components"],m={id:"Introduction",slug:"/"},p={unversionedId:"introduction/Introduction",id:"introduction/Introduction",isDocsHomePage:!1,title:"Introduction",description:"The library aim to provide fully customizable data agnostic diagram components.",source:"@site/docs/introduction/Introduction.mdx",sourceDirName:"introduction",slug:"/",permalink:"/react-diagrams/",editUrl:"https://github.com/kresli/react-diagrams/edit/master/website/docs/introduction/Introduction.mdx",version:"current",frontMatter:{id:"Introduction",slug:"/"},sidebar:"ReactDiagrams",next:{title:"Installation",permalink:"/react-diagrams/Installation"}},b=[{value:"Quick Example",id:"quick-example",children:[]}],g={toc:b};function h(n){var e=n.components,t=(0,a.Z)(n,d);return(0,r.kt)("wrapper",(0,i.Z)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The library aim to provide fully customizable data agnostic diagram components."),(0,r.kt)("h2",{id:"quick-example"},"Quick Example"),(0,r.kt)(c.Z,{className:"language-tsx",mdxType:"CodeBlock"},'import { Schema, useSchema, Diagram } from "../../../src";\nimport React from "react";\n\nconst initialSchema: Schema = {\n  dragLink: null,\n  registeredElements: new Map(),\n  canvasRef: null,\n  viewRef: null,\n  nodes: [\n    {\n      id: "node_a",\n      label: "Node A",\n      position: [100, 100] as [number, number],\n      outputs: [{ id: "1", label: "Out" }],\n    },\n    {\n      id: "node_b",\n      label: "Node B",\n      position: [400, 400] as [number, number],\n      inputs: [{ id: "3", label: "In" }],\n    },\n  ],\n  links: [\n    {\n      input: "1",\n      output: "3",\n    },\n  ],\n  position: [0, 0] as [number, number],\n  scale: 1,\n};\n\nconst DiagramQuickExample = () => {\n  const schema = useSchema(initialSchema);\n  return (\n    <div style={{ width: "100%", height: 500 }}>\n      <Diagram schema={schema} />\n    </div>\n  );\n};\n\nexport default DiagramQuickExample;\n'),(0,r.kt)(l,{mdxType:"DiagramQuickExample"}))}h.isMDXComponent=!0}}]);