(self.webpackChunk_kresli_react_diagrams_docs=self.webpackChunk_kresli_react_diagrams_docs||[]).push([[974],{7879:(t,e,n)=>{"use strict";n.r(e),n.d(e,{contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>x,toc:()=>k});var o=n(7560),i=n(8283),a=n(2784),s=n(876),c=n(323),u=(0,c.Ew)({nodes:[{id:"1",position:[100,100],outputs:[{id:"1"}]},{id:"3",position:[400,400],inputs:[{id:"3"}]}],links:[{input:"3",output:"1"}]});const r=function(){var t=(0,c.I_)(u),e=(0,a.useState)("No context menu"),n=e[0],o=e[1],i=(0,a.useCallback)((function(t){var e=t.clientX,n=t.clientY,i=t.type;o('context menu "'+i+'" on ['+e+", "+n+"]")}),[]);return a.createElement("div",{style:{width:"100%",height:500,position:"relative"}},a.createElement(c.S0,{schema:t,onContextMenu:i}),n&&a.createElement("div",{style:{position:"absolute",top:0}},n))};var m=n(1086),d=["components"],l={},p=void 0,x={unversionedId:"context_menu/Context Menu",id:"context_menu/Context Menu",isDocsHomePage:!1,title:"Context Menu",description:"Quick Example",source:"@site/docs/context_menu/Context Menu.mdx",sourceDirName:"context_menu",slug:"/context_menu/Context Menu",permalink:"/react-diagrams/context_menu/Context Menu",editUrl:"https://github.com/kresli/react-diagrams/edit/master/website/docs/context_menu/Context Menu.mdx",version:"current",frontMatter:{},sidebar:"ReactDiagrams",previous:{title:"Node Data",permalink:"/react-diagrams/node_data/Node Data"},next:{title:"Custom Nodes",permalink:"/react-diagrams/custom_nodes/Custom Nodes"}},k=[{value:"Quick Example",id:"quick-example",children:[]}],C={toc:k};function h(t){var e=t.components,n=(0,i.Z)(t,d);return(0,s.kt)("wrapper",(0,o.Z)({},C,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"quick-example"},"Quick Example"),(0,s.kt)(m.Z,{className:"language-tsx",mdxType:"CodeBlock"},'import React, { useCallback, useState } from "react";\nimport {\n  Diagram,\n  Schema,\n  useSchema,\n  createSchema,\n  DiagramOnContextType,\n} from "@kresli/react-diagrams";\n\nconst initData: Schema = createSchema({\n  nodes: [\n    {\n      id: "1",\n      position: [100, 100],\n      outputs: [{ id: "1" }],\n    },\n    {\n      id: "3",\n      position: [400, 400],\n      inputs: [{ id: "3" }],\n    },\n  ],\n  links: [\n    {\n      input: "3",\n      output: "1",\n    },\n  ],\n});\n\nconst Example = () => {\n  const schema = useSchema(initData);\n  const [contextPosition, setContextPosition] =\n    useState<string>("No context menu");\n  const onContextMenu: DiagramOnContextType = useCallback(\n    ({ clientX, clientY, type }) => {\n      setContextPosition(`context menu "${type}" on [${clientX}, ${clientY}]`);\n    },\n    []\n  );\n  return (\n    <div style={{ width: "100%", height: 500, position: "relative" }}>\n      <Diagram schema={schema} onContextMenu={onContextMenu} />\n      {contextPosition && (\n        <div style={{ position: "absolute", top: 0 }}>{contextPosition}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Example;\n'),(0,s.kt)(r,{mdxType:"QuickExample"}))}h.isMDXComponent=!0}}]);