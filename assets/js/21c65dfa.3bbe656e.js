(self.webpackChunk_kresli_react_diagrams_docs=self.webpackChunk_kresli_react_diagrams_docs||[]).push([[737],{7546:(n,e,t)=>{"use strict";t.r(e),t.d(e,{contentTitle:()=>p,default:()=>k,frontMatter:()=>u,metadata:()=>h,toc:()=>b});var i=t(7560),a=t(8283),o=t(2784),r=t(876),s=t(323),c=(0,s.Ew)({nodes:[{id:"node_a",label:"Node A",position:[100,100],outputs:[{id:"1",label:"Out"}]},{id:"node_b",label:"Node B",position:[400,400],inputs:[{id:"3",label:"In"}]}],links:[{input:"3",output:"1"}],position:[0,0],scale:1});const d=function(){var n=(0,s.I_)(c);return o.createElement("div",{style:{width:"100%",height:500}},o.createElement(s.S0,{schema:n}))};var l=t(1086),m=["components"],u={id:"Introduction",slug:"/"},p=void 0,h={unversionedId:"introduction/Introduction",id:"introduction/Introduction",isDocsHomePage:!1,title:"Introduction",description:"The library aim to provide fully customizable data agnostic diagram components.",source:"@site/docs/introduction/Introduction.mdx",sourceDirName:"introduction",slug:"/",permalink:"/react-diagrams/",editUrl:"https://github.com/kresli/react-diagrams/edit/master/website/docs/introduction/Introduction.mdx",version:"current",frontMatter:{id:"Introduction",slug:"/"},sidebar:"ReactDiagrams",next:{title:"Installation",permalink:"/react-diagrams/Installation"}},b=[{value:"Quick Example",id:"quick-example",children:[]}],g={toc:b};function k(n){var e=n.components,t=(0,a.Z)(n,m);return(0,r.kt)("wrapper",(0,i.Z)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The library aim to provide fully customizable data agnostic diagram components."),(0,r.kt)("h2",{id:"quick-example"},"Quick Example"),(0,r.kt)(l.Z,{className:"language-tsx",mdxType:"CodeBlock"},'import {\n  Schema,\n  useSchema,\n  Diagram,\n  createSchema,\n} from "@kresli/react-diagrams";\nimport React from "react";\n\nconst initialSchema: Schema = createSchema({\n  nodes: [\n    {\n      id: "node_a",\n      label: "Node A",\n      position: [100, 100] as [number, number],\n      outputs: [{ id: "1", label: "Out" }],\n    },\n    {\n      id: "node_b",\n      label: "Node B",\n      position: [400, 400] as [number, number],\n      inputs: [{ id: "3", label: "In" }],\n    },\n  ],\n  links: [\n    {\n      input: "3",\n      output: "1",\n    },\n  ],\n  position: [0, 0] as [number, number],\n  scale: 1,\n});\n\nconst DiagramQuickExample = () => {\n  const schema = useSchema(initialSchema);\n  return (\n    <div style={{ width: "100%", height: 500 }}>\n      <Diagram schema={schema} />\n    </div>\n  );\n};\n\nexport default DiagramQuickExample;\n'),(0,r.kt)(d,{mdxType:"DiagramQuickExample"}))}k.isMDXComponent=!0}}]);